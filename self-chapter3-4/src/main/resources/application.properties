spring.datasource.druid.url=jdbc:mysql://localhost:3306/springboot_test
spring.datasource.druid.username=root
spring.datasource.druid.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver

# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时，默认值为0
spring.datasource.druid.initialSize=10
# 最大连接池数量，默认值为 8
spring.datasource.druid.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.maxWait=60000
# 最小连接池数量
spring.datasource.druid.minIdle=1
#有两个含义：
# 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
# 2) testWhileIdle的判断依据
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.minEvictableIdleTimeMillis=300000
# 建议配置为true，不影响性能，并且保证安全性。默认为 false
spring.datasource.druid.testWhileIdle=true
# 申请连接时执行 validationQuery 检测连接是否有效，做了这个配置会降低性能。默认 true
spring.datasource.druid.testOnBorrow=true
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认 false
spring.datasource.druid.testOnReturn=false
# 是否缓存 preparedStatement，也就是 PSCache。PSCache 对支持游标的数据库性能提升巨大，比如说 oracle。在 mysql 下建议关闭。默认 false
spring.datasource.druid.poolPreparedStatements=true

spring.datasource.druid.maxOpenPreparedStatements=20
# 用来检测连接是否有效的 sql，要求是一个查询语句，常用 select ‘x’。如果 validationQuery 为 null，testOnBorrow、testOnReturn、testWhileIdle 都不会起作用
spring.datasource.druid.validationQuery=SELECT 1

spring.datasource.druid.validation-query-timeout=500
# 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的 filter:stat 日志用的 filter:log4j 防御 sql 注入的 filter:wall
spring.datasource.druid.filters=stat

spring.datasource.druid.stat-view-servlet.enabled=true
# 访问地址规则
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
# 监控页面的登录账户
spring.datasource.druid.stat-view-servlet.login-username=admin
# 监控页面的登录密码
spring.datasource.druid.stat-view-servlet.login-password=admin

# 每次加载 hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭,表就自动删除
spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop


